<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>卡卡罗特</title>
  
  <subtitle>人生若只如初见</subtitle>
  <link href="https://yourk.top/atom.xml" rel="self"/>
  
  <link href="https://yourk.top/"/>
  <updated>2021-05-13T07:43:35.093Z</updated>
  <id>https://yourk.top/</id>
  
  <author>
    <name>牛牛</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Squid+Stunnel氪薛商魍</title>
    <link href="https://yourk.top/2021/04/17/014/"/>
    <id>https://yourk.top/2021/04/17/014/</id>
    <published>2021-04-16T16:00:00.000Z</published>
    <updated>2021-05-13T07:43:35.093Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容">  <script id="hbeData" type="hbeData" data-hmacdigest="2aa64a95281eadf1ea2dee7c147bce221a12f77e6504e804d0f76f5683e4cbed"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">密码联系nnqaqpengju@163.com</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">亲，请输入密码后查看呢</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Squid代理</title>
    <link href="https://yourk.top/2021/03/18/013/"/>
    <id>https://yourk.top/2021/03/18/013/</id>
    <published>2021-03-17T16:00:00.000Z</published>
    <updated>2021-03-18T09:00:39.402Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Squid是一种高性能的代理服务器，用来缓存Internet数据的软件。<br>言简意赅的说就是Squid作为中间人(小三)，当你连接到Squid并且访问谷歌的时候，Squid连接远程的谷歌服务器并发出请求获得Google.com这个页面，再然后返回给你自己，同时Squid还会复制一份这个页面，当下一次有客户机请求的时候相同页面的时候，Squid可以立即从磁盘中读取并传输给客户机，起到了缓存加速的作用。</p><a id="more"></a><h3 id="安装Squid"><a href="#安装Squid" class="headerlink" title="安装Squid"></a>安装Squid</h3><p>1.CentOS安装</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span> ~]<span class="comment"># yum install squid.x86_64 -y</span></span><br></pre></td></tr></table></figure><p>2.启动并添加至开机自启</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span> ~]<span class="comment"># systemctl start squid.service</span></span><br><span class="line">[root<span class="variable">@dj</span> ~]<span class="comment"># systemctl enable squid.service</span></span><br></pre></td></tr></table></figure><p>3.Squid默认端口号3128，拒绝所有连接请求，所以我们还要修改配置文件</p><h3 id="Squid-conf"><a href="#Squid-conf" class="headerlink" title="Squid.conf"></a>Squid.conf</h3><p>1.打开配置文件</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span> ~]<span class="comment"># vim /etc/squid/squid.conf</span></span><br></pre></td></tr></table></figure><p>2.修改默认端口号3128为4678，可以根据自己需求修改1024～65535范围端口</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#代码片段，将3128修改为4678</span></span><br><span class="line"><span class="meta"># Squid normally listens to port 3128</span></span><br><span class="line">http_port <span class="number">3128</span></span><br></pre></td></tr></table></figure><p>3.为Squid添加身份验证，需已安装Apache<br>吐槽一句，百度真滴辣鸡，教程一个一个抄，都是一个模子的。完全找不到正确教程。亿气之下，在谷歌上终于找到了比较详细的讲解，先给地址🔗贴出来👉<a href="https://maoxian.de/2016/06/1415.html">点我</a></p><p>3.1 生成<code>squid_passwd</code>密码文件，用户名uname，此处uname可自行修改</p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span> ~]<span class="comment"># htpasswd -c /etc/squid/squid_passwd uname</span></span><br></pre></td></tr></table></figure><p>3.2 修改<code>squid_passwd</code>文件的所有者为squid</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span> ~]<span class="comment"># chown squid /etc/squid/squid_passwd</span></span><br></pre></td></tr></table></figure><p>3.3 编辑squid.conf，找到<code>http_access deny all</code>，在其上方添加如下几句</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auth_param basic program <span class="regexp">/usr/</span>lib64<span class="regexp">/squid/</span>basic_ncsa_auth <span class="regexp">/etc/</span>squid/squid_passwd</span><br><span class="line">auth_param basic children <span class="number">5</span></span><br><span class="line">auth_param basic realm Squid proxy-caching web server</span><br><span class="line">auth_param basic credentialsttl <span class="number">2</span> hours</span><br><span class="line">auth_param basic casesensitive off</span><br><span class="line">acl ncsa_users proxy_auth REQUIRED</span><br><span class="line">http_access allow ncsa_users</span><br></pre></td></tr></table></figure><p>第1行：指定密码文件和用来验证密码的程序<br>第2行：鉴权进程的数量<br>第3行：用户输入用户名密码时看到的提示信息<br>第4行：用户名和密码的缓存时间<br>第5行：用户名是否需要匹配大小写<br>第6行：所有成功鉴权的用户都归于<code>ncsa_users</code>组<br>第7行：允许<code>ncsa_users</code>组的用户使用<code>Proxy</code><br>3.4 保存退出，重新启squid</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span> ~]<span class="comment"># systemctl restart squid.service</span></span><br></pre></td></tr></table></figure><h3 id="高匿设置"><a href="#高匿设置" class="headerlink" title="高匿设置"></a>高匿设置</h3><p>1.还是在<code>http_access deny all</code>上面添加如下语句</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">forwarded_for</span> <span class="literal">off</span></span><br><span class="line"><span class="attribute">request_header_access</span> <span class="literal">Allow</span> <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Authorization <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> WWW-Authenticate <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Proxy-Authorization <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Proxy-Authenticate <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Cache-Control <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Content-Encoding <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Content-Length <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Content-Type <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Date <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Expires <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Host <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> If-Modified-Since <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Last-Modified <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Location <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Pragma <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Accept <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Accept-Charset <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Accept-Encoding <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Accept-Language <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Content-Language <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Mime-Version <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Retry-After <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Title <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Connection <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Proxy-Connection <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> User-Agent <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> Cookie <span class="literal">allow</span> <span class="literal">all</span></span><br><span class="line"><span class="attribute">request_header_access</span> <span class="literal">All</span> <span class="literal">deny</span> <span class="literal">all</span></span><br></pre></td></tr></table></figure><p>2.默认情况下，squid错误则会显示我们的主机信息，我们改一下，还是继续添加</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">visible_hostname CanYouStillLoveMe?</span><br><span class="line">httpd_suppress_version_string <span class="keyword">on</span></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>1.例如Mac端打开代理，可填写服务端IP或者域名。<br><img src="https://yourk.top/images/Squid_Mac.png" alt="Mac"><br>2.此时，您的IP已经变成服务器端的IP啦</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Squid是一种高性能的代理服务器，用来缓存Internet数据的软件。&lt;br&gt;言简意赅的说就是Squid作为中间人(小三)，当你连接到Squid并且访问谷歌的时候，Squid连接远程的谷歌服务器并发出请求获得Google.com这个页面，再然后返回给你自己，同时Squid还会复制一份这个页面，当下一次有客户机请求的时候相同页面的时候，Squid可以立即从磁盘中读取并传输给客户机，起到了缓存加速的作用。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>简述API</title>
    <link href="https://yourk.top/2021/03/15/012/"/>
    <id>https://yourk.top/2021/03/15/012/</id>
    <published>2021-03-14T16:00:00.000Z</published>
    <updated>2021-03-17T02:48:44.589Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>API，英文全称Application Programming Interface，翻译为“应用程序编程接口”。是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。——百度百科</p><a id="more"></a><p>打个比方：替代哥写了个爬虫程序专门用来抓取网上美女图片，并将其收集记录在某一个网页里，这时候你去打开网页就可以直接看到抓取的图片，而你又不用关心替代哥是用什么方式，什么语言抓取的图片。这个网页即相当于API。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>1.例举博主的获取一个随机的昵称API（实际也是抓别人的，不要脸拿来自己用🤫）<br>2.例如接口地址<code>https://xxxx.xxx/nickname.php</code><br>3.<code>getNickName.php</code>：获取别人接口的数据并存储至我们的数据库。<br>4.<code>getRandName.php</code>：本例最终呈现的接口。<br>5.<code>conn.php</code>：链接数据库代码文件。</p><h4 id="新建数据库、表"><a href="#新建数据库、表" class="headerlink" title="新建数据库、表"></a>新建数据库、表</h4><p>1.新建名为<code>nickname</code>的数据库和数据表。<br>2.字段分别为<code>id</code>、<code>nickname</code>、<code>used</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table nickname(</span><br><span class="line">id int auto_increment,</span><br><span class="line">nickname varchar(30) not null,</span><br><span class="line">used int,</span><br><span class="line">primary key(id)</span><br><span class="line">)engine&#x3D;innodb default charset&#x3D;utf8;</span><br></pre></td></tr></table></figure><p>3.例如某一接口的返回值为：<br><code>&#123;&quot;code&quot;:200,&quot;data&quot;:&#123;&quot;err_code&quot;:0,&quot;err_msg&quot;:&quot;&quot;,&quot;nickname&quot;:&quot;欧尼酱&quot;&#125;,&quot;msg&quot;:&quot;你牛逼&quot;&#125;</code></p><h4 id="编辑conn-php"><a href="#编辑conn-php" class="headerlink" title="编辑conn.php"></a>编辑conn.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$connect</span>=mysqli_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;你的数据库密码&quot;</span>,<span class="string">&quot;nickname&quot;</span>);</span><br><span class="line">mysqli_set_charset(<span class="variable">$connect</span>,<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="编辑getNickName-php"><a href="#编辑getNickName-php" class="headerlink" title="编辑getNickName.php"></a>编辑getNickName.php</h4><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//header头声明content-type为json格式，利于格式化</span></span></span><br><span class="line"><span class="php">header(<span class="string">&quot;Content-type: text/json&quot;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">//链接数据库，使用`include()`把链接代码包括进来，后续将解释include和require的区别。</span></span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">&quot;conn.php&quot;</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="variable">$connect</span>)&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//这里的token_key并不是真是key，三方接口来自果创云（果创云打钱）</span></span></span><br><span class="line"><span class="php"><span class="variable">$token_key</span> = <span class="string">&quot;15WFFF6FF13HYVF082743TJ&amp;sign=BFVYVWH244VFGW1962HFG&quot;</span>;</span></span><br><span class="line"><span class="php"><span class="variable">$url</span> = <span class="string">&quot;http://hd215.api.yesapi.cn/?s=App.Common_Nickname.RandOne&amp;return_data=0&amp;app_key=<span class="subst">$token_key</span>&quot;</span>;</span></span><br><span class="line"><span class="php"><span class="variable">$content</span> = file_get_contents(<span class="variable">$url</span>);</span></span><br><span class="line"><span class="php"><span class="variable">$json_class</span> = json_decode(<span class="variable">$content</span>);</span></span><br><span class="line"><span class="php"><span class="variable">$result</span> = <span class="variable">$json_class</span>-&gt;data-&gt;nickname;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">//将获取到的昵称存入数据库</span></span></span><br><span class="line"><span class="php"><span class="variable">$insert</span> = <span class="string">&quot;insert into nickname (nickname,used) values(&quot;</span><span class="variable">$result</span><span class="string">&quot;,0)&quot;</span>;</span></span><br><span class="line"><span class="php">mysqli_query(<span class="variable">$connect</span>,<span class="variable">$insert</span>);</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">&quot;链接数据库失败！&quot;</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>这样，每访问getName.php一次就会获得一个昵称并存入数据库。<br>But我们不可能一直人为访问，那怎么办呢？于是，<code>crontab</code>命令诞生。<br>（后续将进行解释）<br>1.Linux下输入</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@IDwpj</span> ~]<span class="comment"># crontab -e</span></span><br></pre></td></tr></table></figure><p>2.接着输入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*<span class="regexp">/1 * * * * php /</span>var<span class="regexp">/www/</span>html<span class="regexp">/phpFiles/g</span>etNickName.php</span><br></pre></td></tr></table></figure><p>3.表示每隔1分钟<code>crontab</code>会自动访问该文件一次。⚠️注意写绝对路径。</p><h4 id="编辑getRandName-php"><a href="#编辑getRandName-php" class="headerlink" title="编辑getRandName.php"></a>编辑getRandName.php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;conn.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$connect</span>)&#123;</span><br><span class="line"><span class="variable">$select</span> = <span class="string">&quot;select * from nickname where used = 0 order by rand() limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$connect</span>,<span class="variable">$select</span>);</span><br><span class="line"><span class="variable">$object</span> = mysqli_fetch_object(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="variable">$code</span> = <span class="number">200</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$code</span> = <span class="number">404</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$jsonResult</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;code&#x27;</span> =&gt; <span class="variable">$code</span>,</span><br><span class="line"><span class="string">&#x27;nickname =&gt; $object-&gt;nickname,</span></span><br><span class="line"><span class="string">&#x27;</span>used<span class="string">&#x27; =&gt; $object-&gt;used</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"><span class="string">//使用json_encode()进行json编码。</span></span><br><span class="line"><span class="string">echo json_encode($jsonResult,JSON_UNESCAPED_UNICODE);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>最终呈现结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;code&quot;</span>:<span class="number">200</span>,<span class="attr">&quot;nickname&quot;</span>:<span class="string">&quot;最美不及你顏&quot;</span>,<span class="attr">&quot;used&quot;</span>:<span class="string">&quot;0&quot;</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;API，英文全称Application Programming Interface，翻译为“应用程序编程接口”。是一些预先定义的函数，目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。——百度百科&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>加解密详解</title>
    <link href="https://yourk.top/2021/03/08/011/"/>
    <id>https://yourk.top/2021/03/08/011/</id>
    <published>2021-03-07T16:00:00.000Z</published>
    <updated>2021-03-08T07:23:27.747Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>加密，就是以某种特殊的算法改变原有数据，使未授权用户无法得知原数据内容的方法。<br>本次详解常见的加密方式及其使用，包括单项散列加密、对成加密、非对称加密。</p><h3 id="单项散列加密"><a href="#单项散列加密" class="headerlink" title="单项散列加密"></a>单项散列加密</h3><a id="more"></a><p>1.定义：把任意长度的输入串转换成固定长度的输出串，并且由输出串难以反推输入串的方法。<br>2.常见算法：</p><ul><li>MD5</li><li>SHA</li><li>MAC</li><li>CRC</li></ul><p>3.举例：以MD5为例</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="variable">$str</span>=<span class="string">&quot;hello baby&quot;</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">&quot;加密后：&quot;</span>.md5(<span class="variable">$str</span>);</span></span><br><span class="line"><span class="php"><span class="comment">//结果：加密后：292bf3c832cce2ab5d4f9775596b13bd</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>4.推荐加密方式<br><code>password_hash()</code>使用足够强度的单向散列算法创建密码的散列(hash)。</p><ul><li>PASSWORD_DEFAULT：使用<a href="https://blog.csdn.net/weixin_30932215/article/details/95050221">bcrypt</a>算法。生成结果长度不固定。</li><li>PASSWORD_BCRYPT：使用CRYPT_BLOWFISH算法创建散列。生成结果固定60个字符的字符串，失败则false。</li></ul><p>5.示例代码</p><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//PASSWORD_DEFAULT</span></span></span><br><span class="line"><span class="php"><span class="variable">$str</span>=<span class="string">&quot;hello baby&quot;</span>;</span></span><br><span class="line"><span class="php"><span class="variable">$hash</span>=password_hash(<span class="variable">$str</span>,PASSWORD_DEFAULT);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">&quot;加密前：&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;&lt;hr/&gt;&quot;</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">&quot;加密后：&quot;</span>.<span class="variable">$hash</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">//PASSWORD_BCRYPT</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr/&gt;&quot;</span>;</span></span><br><span class="line"><span class="php"><span class="variable">$hash2</span>=password_hash(<span class="variable">$str</span>,PASSWORD_BCRYPT);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">&quot;加密后：&quot;</span>.<span class="variable">$hash2</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//结果：</span></span></span><br><span class="line"><span class="php"><span class="comment">//加密前：hello baby</span></span></span><br><span class="line"><span class="php"><span class="comment">//加密后：$2y$10$W2qABOON.5YkuGJPYrcnxet8v5Ii3oWfms5O1sunOKpeCeQfNCpKy</span></span></span><br><span class="line"><span class="php"><span class="comment">//加密后：$2y$10$eo1gPc61NLOd4J72RttXa.Ssgq4/6XV1DPcrATxNELZ7jDhA7WZvm</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h3><p>1.定义：同一个密钥可以同时用作数据的加密和解密，这种方法称为对称加密。<br>就比如一把钥匙🔑可以上锁和解锁。<br>2.常用算法</p><ul><li>DES</li><li>AES<br>AES可以说是DES的升级版，密钥长度更长，可以设定为32 bite的任意倍数，最小值128 bite，最大值256 bite，暴力破解基本不可能。</li></ul><p>3.缺点<br>发送方和接收方必须商定好密钥，且双方都能保管好密钥，密钥管理成为双方负担。<br>4.示例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Aes</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * var string $method 加解密方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$method</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * var string $secret_key 加解密的密钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$secret_key</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * var string $iv 加解密的向量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$iv</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * var int $options</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$options</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造函数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $key     密钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $method  加密方式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $iv      向量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int    $options</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$key</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$method</span> = <span class="string">&#x27;AES-128-CBC&#x27;</span>, <span class="variable">$iv</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$options</span> = OPENSSL_RAW_DATA</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;secret_key = <span class="keyword">isset</span>(<span class="variable">$key</span>) ? <span class="variable">$key</span> : <span class="string">&#x27;CWq3g0hgl7Ao2OKI&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;method = in_array(<span class="variable">$method</span>, openssl_get_cipher_methods()) ? <span class="variable">$method</span> : <span class="string">&#x27;AES-128-CBC&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;iv = <span class="variable">$iv</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options = in_array(<span class="variable">$options</span>, [OPENSSL_RAW_DATA, OPENSSL_ZERO_PADDING]) ? <span class="variable">$options</span> : OPENSSL_RAW_DATA;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加密</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $data 加密的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$data</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> base64_encode(openssl_encrypt(<span class="variable">$data</span>, <span class="keyword">$this</span>-&gt;method, <span class="keyword">$this</span>-&gt;secret_key, <span class="keyword">$this</span>-&gt;options, <span class="keyword">$this</span>-&gt;iv));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解密</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $data 解密的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$data</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> openssl_decrypt(base64_decode(<span class="variable">$data</span>), <span class="keyword">$this</span>-&gt;method, <span class="keyword">$this</span>-&gt;secret_key, <span class="keyword">$this</span>-&gt;options, <span class="keyword">$this</span>-&gt;iv);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$aes</span> = <span class="keyword">new</span> Aes(<span class="string">&#x27;HFu8Z5SjAT7CudQc&#x27;</span>);</span><br><span class="line"><span class="variable">$encrypted</span> = <span class="variable">$aes</span>-&gt;encrypt(<span class="string">&#x27;美好总是不期而遇&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;加密前：美好总是不期而遇&lt;br&gt;加密后：&#x27;</span>, <span class="variable">$encrypted</span>, <span class="string">&#x27;&lt;hr&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$decrypted</span> = <span class="variable">$aes</span>-&gt;decrypt(<span class="variable">$encrypted</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;加密后：&#x27;</span>, <span class="variable">$encrypted</span>, <span class="string">&#x27;&lt;br&gt;解密后：&#x27;</span>, <span class="variable">$decrypted</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果：</span></span><br><span class="line">加密前：美好总是不期而遇</span><br><span class="line">加密后：FFhUIjC7P8hq2CinNKFkKyiHT/AGj9vXldh0A+GFceg=</span><br><span class="line"></span><br><span class="line">加密后：FFhUIjC7P8hq2CinNKFkKyiHT/AGj9vXldh0A+GFceg=</span><br><span class="line">解密后：美好总是不期而遇</span><br></pre></td></tr></table></figure><h3 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h3><p>1.定义：需要两个密钥进行加解密，分别对应公钥（public key）和私钥（private key），这种方法称为非对称加密。<br>2.常用算法</p><ul><li>RSA</li></ul><p>3.特点<br>优点：与对称加密相比，安全性更好，加解密需要不同的密钥，公钥和私钥都可进行相互的加解密。<br>缺点：加解密耗时长，速度慢，RSA算法的保密强度随其密钥的长度增加而增强，RSA的速度比对应同样安全级别的对称密码算法要慢1000倍左右。<br>公钥和私钥是一对的，可以这么理解，公钥负责加密，加密过后的内容只有拥有私钥的“人”才能看懂。<br>4.示例代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">略～～</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;加密，就是以某种特殊的算法改变原有数据，使未授权用户无法得知原数据内容的方法。&lt;br&gt;本次详解常见的加密方式及其使用，包括单项散列加密、对成加密、非对称加密。&lt;/p&gt;
&lt;h3 id=&quot;单项散列加密&quot;&gt;&lt;a href=&quot;#单项散列加密&quot; class=&quot;headerlink&quot; title=&quot;单项散列加密&quot;&gt;&lt;/a&gt;单项散列加密&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>MySQL存储emoji(😍)</title>
    <link href="https://yourk.top/2021/03/04/010/"/>
    <id>https://yourk.top/2021/03/04/010/</id>
    <published>2021-03-03T16:00:00.000Z</published>
    <updated>2021-03-05T09:43:45.044Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>闲言细语的就不说了，看<del>娇嗔</del>，教程。<br>1.目前大部分MySQL使用者都以utf8存储，MySQL的utf8规定了最多只能有3个字节，即3 Byte；而emoji的unicode已经超过3个字节，所以utf8不能存储识别emoji。<br>2.那仲么办？根据<del>我的记忆</del>网上资料得知，从MySQL5.5之后开始支持utf8mb4编码格式，这种格式支持1-4个字节，向下兼容utf8，正好对上emoji的4个字节。</p><a id="more"></a><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emoji(</span><br><span class="line">id <span class="type">int</span> auto_increment,</span><br><span class="line">emoji <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="keyword">primary</span> <span class="keyword">key</span>(id)</span><br><span class="line">)engine<span class="operator">=</span>innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8mb4;</span><br></pre></td></tr></table></figure><p>1.较以往不同的是，默认编码格式从<code>utf8</code>变为<code>utf8mb4</code>而已。<br>2.这里创建的是名为emoji的数据表，字段有<code>id</code>和<code>emoji</code>。</p><h3 id="插入并查看emoji"><a href="#插入并查看emoji" class="headerlink" title="插入并查看emoji"></a>插入并查看emoji</h3><p>1.插入”🤣”</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">insert</span> <span class="keyword">into</span> emoji(emoji) <span class="keyword">values</span>(&quot;🤣&quot;);</span><br><span class="line">Query OK, <span class="number">1</span> <span class="type">row</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>2.查看</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from emoji;</span><br><span class="line"><span class="code">+----+</span>----------------+</span><br><span class="line">| id | emoji          |</span><br><span class="line"><span class="code">+----+</span>----------------+</span><br><span class="line">|  1 | 🤣               |</span><br><span class="line">|  2 | 😍               |</span><br><span class="line">|  3 | 😍😀☺️             |</span><br><span class="line">|  4 | 😘               |</span><br><span class="line">|  5 | 😷               |</span><br><span class="line"><span class="code">+----+</span>----------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>3.读取的话可以根据ID，或者其它条件进行查询即可。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;闲言细语的就不说了，看&lt;del&gt;娇嗔&lt;/del&gt;，教程。&lt;br&gt;1.目前大部分MySQL使用者都以utf8存储，MySQL的utf8规定了最多只能有3个字节，即3 Byte；而emoji的unicode已经超过3个字节，所以utf8不能存储识别emoji。&lt;br&gt;2.那仲么办？根据&lt;del&gt;我的记忆&lt;/del&gt;网上资料得知，从MySQL5.5之后开始支持utf8mb4编码格式，这种格式支持1-4个字节，向下兼容utf8，正好对上emoji的4个字节。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>表白时刻(🙂)</title>
    <link href="https://yourk.top/2021/03/04/009/"/>
    <id>https://yourk.top/2021/03/04/009/</id>
    <published>2021-03-03T16:00:00.000Z</published>
    <updated>2021-03-04T09:26:16.672Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>水一波。这个网站可以免费制作你喜欢的网页并一键生成链接👉<a href="http://www.biaobaishike.com/biaobai.php">点我</a>👈</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>查询IP及地理位置</title>
    <link href="https://yourk.top/2021/03/03/008/"/>
    <id>https://yourk.top/2021/03/03/008/</id>
    <published>2021-03-02T16:00:00.000Z</published>
    <updated>2021-03-03T03:44:33.886Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>较早之前净喜欢整的花里胡哨的功能之一，挺简单的，获取访问者IP，再通过第三方接口查询IP归属地，方法很质朴，可以用<code>json_decode()</code>进行后续改进。</p><h3 id="编辑index-php"><a href="#编辑index-php" class="headerlink" title="编辑index.php"></a>编辑index.php</h3><a id="more"></a><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;refresh&quot;</span> <span class="attr">content</span>=<span class="string">&quot;0;URL=hello.html&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="function"><span class="keyword">function</span> <span class="title">get_ip_address</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//存在于http请求header中，可伪造</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>]))&#123;</span></span><br><span class="line"><span class="php">                <span class="variable">$ipaddress</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_CLIENT_IP&#x27;</span>];</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"><span class="comment">//一样，可伪造</span></span></span><br><span class="line"><span class="php">        <span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]))&#123;</span></span><br><span class="line"><span class="php">                <span class="variable">$ipaddress</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//可靠的，但它获取的是和你最后一次握手的IP，可能是代理服务器IP，也有可能是自己的反向代理。</span></span></span><br><span class="line"><span class="php">                <span class="variable">$ipaddress</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>];</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">&quot;您的IP地址为:&quot;</span> .  <span class="variable">$ipaddress</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">//以下是获取IP归属地</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//声明content-type</span></span></span><br><span class="line"><span class="php">header(<span class="string">&#x27;Content-type:text/html;Charset=utf-8&#x27;</span>);</span></span><br><span class="line"><span class="php">        <span class="variable">$ip</span>=<span class="string">&quot;<span class="subst">$ipaddress</span>&quot;</span>;</span></span><br><span class="line"><span class="php"><span class="comment">//并入到三方接口，通过file_get_contents()获取页面</span></span></span><br><span class="line"><span class="php">        <span class="variable">$url</span>=<span class="string">&quot;http://whois.pconline.com.cn/?ip=<span class="subst">$ip</span>&quot;</span>;</span></span><br><span class="line"><span class="php">        <span class="variable">$getip</span>=file_get_contents(<span class="variable">$url</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">//由于此三方页面编码格式为GB2313，通过@iconv()转换成utf-8格式</span></span></span><br><span class="line"><span class="php">        <span class="variable">$value_2</span>   =   @iconv( <span class="string">&quot;gb2312&quot;</span>, <span class="string">&quot;utf-8&quot;</span>,<span class="variable">$getip</span>);</span></span><br><span class="line"><span class="php"><span class="comment">//通过正则匹配出位置信息(当时正则一点也不会，导致获取到了还要截取)</span></span></span><br><span class="line"><span class="php">        preg_match_all(<span class="string">&quot;/位置：.*/&quot;</span>,<span class="variable">$value_2</span>,<span class="variable">$value_3</span>);</span></span><br><span class="line"><span class="php"><span class="comment">//截取出&quot;位置:&quot;后的信息</span></span></span><br><span class="line"><span class="php">        <span class="variable">$str</span>=substr(<span class="variable">$value_3</span>[<span class="number">0</span>][<span class="number">0</span>],<span class="number">9</span>);</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="variable">$str</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">get_ip_address();</span></span><br><span class="line"><span class="xml">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;较早之前净喜欢整的花里胡哨的功能之一，挺简单的，获取访问者IP，再通过第三方接口查询IP归属地，方法很质朴，可以用&lt;code&gt;json_decode()&lt;/code&gt;进行后续改进。&lt;/p&gt;
&lt;h3 id=&quot;编辑index-php&quot;&gt;&lt;a href=&quot;#编辑index-php&quot; class=&quot;headerlink&quot; title=&quot;编辑index.php&quot;&gt;&lt;/a&gt;编辑index.php&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>防绕过登陆(session)</title>
    <link href="https://yourk.top/2021/03/02/007/"/>
    <id>https://yourk.top/2021/03/02/007/</id>
    <published>2021-03-01T16:00:00.000Z</published>
    <updated>2021-03-02T08:41:26.201Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>继上篇cookie实现防绕过登陆，session实现方式来啦。<br>换个session，类似于cookie。<br>session较cookie安全性更高。它们的部分特点如下<br>1.session存储在服务器端，cookie存储在客户端。<br>2.session在一定时间内储存在服务器上，当访问量增多会拉垮服务器性能。</p><h3 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h3><a id="more"></a><p><code>index.php</code>：登陆页面。<br><code>index2.php</code>：处理页面。<br><code>welcome.php</code>：欢迎页面。</p><h3 id="编辑index-php"><a href="#编辑index-php" class="headerlink" title="编辑index.php"></a>编辑index.php</h3><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index2.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="编辑index2-php"><a href="#编辑index2-php" class="headerlink" title="编辑index2.php"></a>编辑index2.php</h3><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="variable">$getname</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span></span><br><span class="line"><span class="php"><span class="variable">$getpawd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="variable">$getname</span>==<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$getpawd</span>==<span class="string">&#x27;admin&#x27;</span>)&#123;</span></span><br><span class="line"><span class="php">        <span class="comment">//PHP中使用session前需要现开启session会话</span></span></span><br><span class="line"><span class="php">        session_start();</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="comment">//登陆成功设置一个名为mysession的session，值为上面的$getname,有效期10秒</span></span></span><br><span class="line"><span class="php">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;mysession&#x27;</span>]=<span class="variable">$getname</span>;</span></span><br><span class="line"><span class="php">        setcookie(<span class="string">&quot;<span class="subst">$getname</span>&quot;</span>,<span class="string">&quot;<span class="subst">$session_id</span>()&quot;</span>,time()+<span class="number">10</span>);</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;登陆成功！&#x27;);window.location.href=&#x27;welcome.php&#x27;;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;用户名或密码错误&#x27;);window.location=&#x27;index.php&#x27;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="编辑welcome-php"><a href="#编辑welcome-php" class="headerlink" title="编辑welcome.php"></a>编辑welcome.php</h3><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//同样，下面对session进行了判断，所以也要开启session会话</span></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;mysession&#x27;</span>])&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//session有默认有效期，24分钟</span></span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">&quot;session已设置，可以访问!&quot;</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;小伙子不要偷偷摸摸&#x27;);window.location.href=&#x27;index.php&#x27;;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//只有登陆过的人才能看到下面这句话👇❤️</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>fuck you,baby<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;继上篇cookie实现防绕过登陆，session实现方式来啦。&lt;br&gt;换个session，类似于cookie。&lt;br&gt;session较cookie安全性更高。它们的部分特点如下&lt;br&gt;1.session存储在服务器端，cookie存储在客户端。&lt;br&gt;2.session在一定时间内储存在服务器上，当访问量增多会拉垮服务器性能。&lt;/p&gt;
&lt;h3 id=&quot;准备阶段&quot;&gt;&lt;a href=&quot;#准备阶段&quot; class=&quot;headerlink&quot; title=&quot;准备阶段&quot;&gt;&lt;/a&gt;准备阶段&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>防绕过登陆(cookie)</title>
    <link href="https://yourk.top/2021/02/20/006/"/>
    <id>https://yourk.top/2021/02/20/006/</id>
    <published>2021-02-19T16:00:00.000Z</published>
    <updated>2021-03-02T10:22:41.531Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>上一篇文章中讲到登陆例子，登陆成功后就会跳转至welcome.php界面。但是我们同样可以直接在地址栏里输入welcome.php的绝对地址来绕过login.php地验证。下面就来简单演示下如何防止。(没有任何CSS样式，本例使用cookie演示，session后续更新，相关解释在代码中)</p><h3 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h3><a id="more"></a><p>首先我们准备三个文件，分别是<br><code>index.php</code>：登陆页面，输入账号密码的。<br><code>index2.php</code>：处理界面，验证账号密码的。<br><code>welcome.php</code>：欢迎页面，显示成功登陆的。</p><h3 id="编辑index-php"><a href="#编辑index-php" class="headerlink" title="编辑index.php"></a>编辑index.php</h3><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index2.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="编辑index2-php"><a href="#编辑index2-php" class="headerlink" title="编辑index2.php"></a>编辑index2.php</h3><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">        <span class="variable">$getname</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span></span><br><span class="line"><span class="php">        <span class="variable">$getpawd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="comment">//这里简单写一下，就不链接数据库进行判断了</span></span></span><br><span class="line"><span class="php">        <span class="keyword">if</span>(<span class="variable">$getname</span>==<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$getpawd</span>==<span class="string">&#x27;admin&#x27;</span>)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">       <span class="comment">//这里设置一个名为mycookie的cookie，其值为admin，有效期10秒钟。</span></span></span><br><span class="line"><span class="php">       <span class="comment">//意思就是登陆成功后，这个cookie会存在10秒，10秒后销毁，即不存在咯</span></span></span><br><span class="line"><span class="php">       <span class="comment">//比如有的网站登陆成功关闭网页，再次访问，一段时间内就不用再次登陆。</span></span></span><br><span class="line"><span class="php">       <span class="comment">//例如我们要1个星期都有效，即 time()+3600*24*7,一小时3600秒，一天24小时，一星期7天，这就出来了，可根据自己需求灵活设定。</span></span></span><br><span class="line"><span class="php">            setcookie(<span class="string">&quot;mycookie&quot;</span>,<span class="string">&quot;admin&quot;</span>,time()+<span class="number">10</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;登陆成功！&#x27;);window.location.href=&#x27;welcome.php&#x27;;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;用户名或密码错误&#x27;);window.location=&#x27;index.php&#x27;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    <span class="meta">?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="编辑welcome-php"><a href="#编辑welcome-php" class="headerlink" title="编辑welcome.php"></a>编辑welcome.php</h3><figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">//刚进来啥也不干，判断下有没有叫mycookie的cookie存在(因为cookie是全局变量，搁哪儿都能用)</span></span><br><span class="line"><span class="xml">//isset()判断名叫mycookie的cookie是否设置，返回布尔值。</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    </span><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;mycookie&#x27;</span>]))&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">&quot;session已设置，可以访问！&quot;</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">            <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">                <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;小伙子不要偷偷摸摸&#x27;);window.location.href=&#x27;index.php&#x27;;&lt;/script&gt;&quot;</span>;</span></span><br><span class="line"><span class="php">            &#125;</span></span><br><span class="line"><span class="php">    <span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">//只有登陆过的人才能看到下面这句话👇❤️</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我叼你妈的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;上一篇文章中讲到登陆例子，登陆成功后就会跳转至welcome.php界面。但是我们同样可以直接在地址栏里输入welcome.php的绝对地址来绕过login.php地验证。下面就来简单演示下如何防止。(没有任何CSS样式，本例使用cookie演示，session后续更新，相关解释在代码中)&lt;/p&gt;
&lt;h3 id=&quot;准备阶段&quot;&gt;&lt;a href=&quot;#准备阶段&quot; class=&quot;headerlink&quot; title=&quot;准备阶段&quot;&gt;&lt;/a&gt;准备阶段&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>简单的注册登录示例</title>
    <link href="https://yourk.top/2021/02/19/005/"/>
    <id>https://yourk.top/2021/02/19/005/</id>
    <published>2021-02-18T16:00:00.000Z</published>
    <updated>2021-03-02T04:13:24.826Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前面的LAMP环境搭建完成后，接下来，展示如何写一个简单的注册登录的例子。<br>思路分析：<br>1.首先register.html作为注册页面，负责收录填写的注册信息。<br>2.register.php作为验证注册页面，负责验证用户注册信息是否符合要求。<br>3.login.html作为登录页面，用于填写用户登录的信息。<br>4.login.php作为验证登录页面，负责验证用户登录信息是否正确。<br>5.新建<code>users</code>数据库，其下<code>user_info</code>数据表用于存储用户信息。<br>6.由于这只是个简单的例子，注册成功或登录成功跳转的页面没有写防止URL直接访问，后续将更新❤️<br>7.废话不多说，开整。</p><a id="more"></a><h2 id="新建数据库、表"><a href="#新建数据库、表" class="headerlink" title="新建数据库、表"></a>新建数据库、表</h2><p>1.新建数据库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">database</span> users;</span><br><span class="line">#提示：Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>2.切换到user数据库</p><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">use</span> <span class="title">users</span>;</span><br><span class="line">#提示：Database changed</span><br></pre></td></tr></table></figure><p>3.新建数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> <span class="keyword">table</span> user_info(</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> auto_increment,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> uname <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> upasswd <span class="type">varchar</span>(<span class="number">60</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">primary</span> <span class="keyword">key</span> (id)</span><br><span class="line">    <span class="operator">-</span><span class="operator">&gt;</span> )engine<span class="operator">=</span>InnoDB <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line">#提示：Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><p>这里新建一个表名为user_info的数据表其中字段分别为<br><code>id</code>:整型，自增，不允许为空。<br><code>uname</code>:字符数据类型，长度最大20，不允许为空。<br><code>upasswd</code>:字符数据类型，长度最大60，不允许为空。</p><p>另外<br><code>primary key (id)</code>:设置主键为id。<br><code>engine=InnoDB</code>设置数据库引擎为InnoDB。<br><code>default charset=utf8</code>:设置默认编码为utf8。<br>这些可以根据自己需求灵活调整。</p><h2 id="编辑register-html"><a href="#编辑register-html" class="headerlink" title="编辑register.html"></a>编辑register.html</h2><p>注册页面,附上所有的代码，包括难看的CSS、拉跨的JS，就不一一详解了。</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml">h2&#123;</span></span><br><span class="line"><span class="xml">        text-align:center;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">ul li&#123;</span></span><br><span class="line"><span class="xml">        text-align:center;</span></span><br><span class="line"><span class="xml">        list-style:none;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">span&#123;</span></span><br><span class="line"><span class="xml">        display:inline-block;</span></span><br><span class="line"><span class="xml">        width:200px;</span></span><br><span class="line"><span class="xml">        text-align:right;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">.form&#123;</span></span><br><span class="line"><span class="xml">        text-align:center;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">.username,.password,.confirm_password&#123;</span></span><br><span class="line"><span class="xml">        border-radius:3px;</span></span><br><span class="line"><span class="xml">        padding:13px 14px;</span></span><br><span class="line"><span class="xml">        margin:5px;</span></span><br><span class="line"><span class="xml">        width:300px;</span></span><br><span class="line"><span class="xml">        font-size:14px;</span></span><br><span class="line"><span class="xml">        outline-style:none;</span></span><br><span class="line"><span class="xml">        border:1px solid #ccc;</span></span><br><span class="line"><span class="xml">        font-family: &quot;Microsoft soft&quot;;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">.username , .password , .confirm_password:focus&#123;</span></span><br><span class="line"><span class="xml">        border-color: #66afe9;</span></span><br><span class="line"><span class="xml">        outline: 0;</span></span><br><span class="line"><span class="xml">        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);</span></span><br><span class="line"><span class="xml">box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>用户注册<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span> <span class="attr">action</span>=<span class="string">&quot;register.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">autofocus</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">class</span>=<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;20&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">required</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;20&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">required</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;confirm_password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;confirm_password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;confirm_password&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;20&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">required</span> <span class="attr">onkeyup</span>=<span class="string">&quot;checkPassword()&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;pp&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">class</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;清空&quot;</span> <span class="attr">class</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">id</span>=<span class="string">&quot;reset&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">                function checkPassword()&#123;</span></span><br><span class="line"><span class="xml">                        var password = document.getElementById(&quot;password&quot;).value;</span></span><br><span class="line"><span class="xml">                        var conPassword = document.getElementById(&quot;confirm_password&quot;).value;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">                        if(password == conPassword)&#123;</span></span><br><span class="line"><span class="xml">                                document.getElementById(&quot;submit&quot;).disabled = false;</span></span><br><span class="line"><span class="xml">                        &#125;</span></span><br><span class="line"><span class="xml">                        else&#123;</span></span><br><span class="line"><span class="xml">                                document.getElementById(&quot;submit&quot;).disabled = true;</span></span><br><span class="line"><span class="xml">                        &#125;</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="编辑register-php"><a href="#编辑register-php" class="headerlink" title="编辑register.php"></a>编辑register.php</h2><p>接收上面的register.html的注册信息，并进行处理。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$connect</span>=mysqli_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;你的数据库密码&quot;</span>,<span class="string">&quot;users&quot;</span>);</span><br><span class="line">mysqli_set_charset(<span class="variable">$connect</span>,<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$connect</span>)&#123;</span><br><span class="line">        <span class="variable">$uname</span>=<span class="variable">$_POST</span>[<span class="string">&quot;username&quot;</span>];</span><br><span class="line">        <span class="variable">$upassword</span>=<span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对注册用户信息进行查询，看是否已经注册</span></span><br><span class="line">        <span class="variable">$select</span>=<span class="string">&quot;select uname from user_info where uname=&#x27;<span class="subst">$uname</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$result</span>=mysqli_query(<span class="variable">$connect</span>,<span class="variable">$select</span>);</span><br><span class="line">        <span class="variable">$num</span>=mysqli_num_rows(<span class="variable">$result</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$num</span> &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;该用户已被注册！&#x27;);window.location.href=&#x27;register.html&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$hash</span>=password_hash(<span class="variable">$upassword</span>,PASSWORD_BCRYPT);<span class="comment">//将用户的密码进行加密，固定长度60</span></span><br><span class="line">                <span class="variable">$insert</span>=<span class="string">&quot;insert into user_info (uname,upasswd) values(&#x27;<span class="subst">$uname</span>&#x27;,&#x27;<span class="subst">$hash</span>&#x27;)&quot;</span>;</span><br><span class="line">                mysqli_query(<span class="variable">$connect</span>,<span class="variable">$insert</span>);</span><br><span class="line"><span class="comment">//这里若是嫌弃60长度太长，可以进行对hash值进行MD5加密再插入，这里不作演示咯~~</span></span><br><span class="line"></span><br><span class="line">                <span class="variable">$select</span>=<span class="string">&quot;select uname from user_info where uname=&#x27;<span class="subst">$uname</span>&#x27;&quot;</span>;<span class="comment">//对插入的信息进行查询，是否成功</span></span><br><span class="line">                <span class="variable">$result</span>=mysqli_query(<span class="variable">$connect</span>,<span class="variable">$select</span>);</span><br><span class="line">                <span class="variable">$num</span>=mysqli_num_rows(<span class="variable">$result</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$num</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;注册成功！&#x27;);&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;发生一些未知问题，注册失败！&#x27;);window.location.href=&#x27;register.html&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;数据库不行了～～&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="编辑login-html"><a href="#编辑login-html" class="headerlink" title="编辑login.html"></a>编辑login.html</h2><p>登录页面，无CSS样式~~</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center&quot;</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;login.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">required</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">required</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="编辑login-php"><a href="#编辑login-php" class="headerlink" title="编辑login.php"></a>编辑login.php</h2><p>验证上面的登录页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$connect</span>=mysqli_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;你的数据库密码&quot;</span>,<span class="string">&quot;users&quot;</span>);</span><br><span class="line">mysqli_set_charset(<span class="variable">$connect</span>,<span class="string">&quot;utf8&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$connect</span>)&#123;</span><br><span class="line"><span class="comment">//此处也一样，也可以对POST过来的数据进行非空验证，我也不写了~</span></span><br><span class="line"><span class="variable">$getName</span>=<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"><span class="variable">$getPassword</span>=<span class="variable">$_POST</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$select</span>=<span class="string">&quot;select uname,upasswd from user_info where uname=&#x27;<span class="subst">$getName</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysqli_query(<span class="variable">$connect</span>,<span class="variable">$select</span>);</span><br><span class="line"><span class="variable">$object</span>=mysqli_fetch_object(<span class="variable">$result</span>);</span><br><span class="line"><span class="variable">$hash</span>=<span class="variable">$object</span>-&gt;upasswd;</span><br><span class="line"></span><br><span class="line"><span class="comment">//因为数据库存储的是加密过的密码，是不可逆的，只能通过password_verify()方法进行验证</span></span><br><span class="line"><span class="comment">//这个方法有两个参数，参数1：用户的密码；参数2：一个由 password_hash() 创建的散列值。</span></span><br><span class="line"><span class="comment">//如果密码和散列值匹配则返回 TRUE，否则返回 FALSE。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(password_verify(<span class="variable">$getPassword</span>,<span class="variable">$hash</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;登录成功！&#x27;);window.location.href=&#x27;welcom.html&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//同样，登录成功过后的跳转，可以根据自己需求来写</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;密码错误！&#x27;);window.location.href=&#x27;login.html&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;链接数据库失败！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>OK了，完成后将这些文件放在同一个文件夹中，例如<code>/var/www/html/</code>下即可，打开你的浏览器访问即可！</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前面的LAMP环境搭建完成后，接下来，展示如何写一个简单的注册登录的例子。&lt;br&gt;思路分析：&lt;br&gt;1.首先register.html作为注册页面，负责收录填写的注册信息。&lt;br&gt;2.register.php作为验证注册页面，负责验证用户注册信息是否符合要求。&lt;br&gt;3.login.html作为登录页面，用于填写用户登录的信息。&lt;br&gt;4.login.php作为验证登录页面，负责验证用户登录信息是否正确。&lt;br&gt;5.新建&lt;code&gt;users&lt;/code&gt;数据库，其下&lt;code&gt;user_info&lt;/code&gt;数据表用于存储用户信息。&lt;br&gt;6.由于这只是个简单的例子，注册成功或登录成功跳转的页面没有写防止URL直接访问，后续将更新❤️&lt;br&gt;7.废话不多说，开整。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>LAMP环境搭建</title>
    <link href="https://yourk.top/2021/02/05/004/"/>
    <id>https://yourk.top/2021/02/05/004/</id>
    <published>2021-02-04T16:00:00.000Z</published>
    <updated>2021-05-18T02:46:11.518Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>LAMP即Linux、Apache、MySQL、PHP的简称，是一种常见的web服务环境。Linux用作后端操作系统(OS)；Apache是Web服务器；MySQL是数据库；PHP是脚本语言。下面将展示如何搭建这套环境。</p><h3 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h3><a id="more"></a><p>tips：这里Apache和MySQL推荐先安装，因为PHP与MySQL需要进行关联<br>1.执行安装命令</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span>~]<span class="comment"># yum install mysql-server -y</span></span><br></pre></td></tr></table></figure><p>2.启动MySQL服务</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span>~]<span class="comment"># systemctl start mysqld.service</span></span><br></pre></td></tr></table></figure><p>3.把MySQL添加到开机启动项</p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span>~]<span class="comment"># systemctl enable mysqld</span></span><br></pre></td></tr></table></figure><p>4.查看MySQL初始登录密码</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@dj~]# <span class="keyword">cat</span> /<span class="keyword">var</span>/<span class="keyword">log</span>/mysqld.<span class="keyword">log</span> | grep <span class="string">&quot;generated for root@localhost&quot;</span></span><br><span class="line">或者</span><br><span class="line">[root@dj~]# <span class="keyword">cat</span> /<span class="keyword">var</span>/<span class="keyword">log</span>/mysqld/mysqld.<span class="keyword">log</span> | grep <span class="string">&quot;generated for root@localhost&quot;</span></span><br></pre></td></tr></table></figure><p>5.有初始密码的提示如下<br>其中******即你的密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dj~]# A <span class="keyword">temporary</span> <span class="keyword">password</span> <span class="keyword">is</span> <span class="keyword">generated</span> <span class="keyword">for</span> root@localhost: ******</span><br></pre></td></tr></table></figure><p>6.登录MySQL</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span>~]<span class="comment"># mysql -uroot -p******</span></span><br></pre></td></tr></table></figure><p>以上方式存在泄漏密码的风险，推荐输入-p后直接回车，再次输入密码。此处密码不会显示。<br>7.登录MySQL修改初始密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  <span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;你想要的密码&#x27;</span>;</span><br></pre></td></tr></table></figure><p>8.退出MySQL</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">quit</span></span><br></pre></td></tr></table></figure><h3 id="Apache安装"><a href="#Apache安装" class="headerlink" title="Apache安装"></a>Apache安装</h3><p>1.yum源安装</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span>~]<span class="comment"># yum install httpd -y</span></span><br></pre></td></tr></table></figure><p>2.启动httpd服务(Apache进程服务名叫httpd)</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span>~]<span class="comment"># systemctl start httpd.service</span></span><br></pre></td></tr></table></figure><p>3.加入到开机项</p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span>~]<span class="comment"># systemctl enable httpd</span></span><br></pre></td></tr></table></figure><p>4.修改Apache配置文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dj~]# vim <span class="regexp">/etc/</span>httpd<span class="regexp">/conf/</span>httpd.conf</span><br></pre></td></tr></table></figure><p>5.找到 Options Indexes FollowSymLinks，把Indexes删掉，作用是禁止查看站点目录结构。<br>6.找到Listen 80，修改为Listen 8080(修改监听端口为8080，笔者这里的80端口给Nginx使用了，所以，不需要的可以忽略这一步)<br>7.找到DirectoryIndex index.html，在后面加上index.php。这样Apache才能识别php文件。<br>8.保存退出，重启httpd服务</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span>~]<span class="comment"># systemctl restart httpd.service</span></span><br></pre></td></tr></table></figure><h3 id="PHP安装"><a href="#PHP安装" class="headerlink" title="PHP安装"></a>PHP安装</h3><p>tips：此处安装的版本为php7版本<br>1.安装gcc编译器</p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span>~]<span class="comment"># yum -y install gcc gcc-c++</span></span><br></pre></td></tr></table></figure><p>2.安装EPEL源</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span><span class="operator">~</span>]# yum install epel<span class="operator">-</span><span class="keyword">release</span> <span class="operator">-</span>y</span><br><span class="line">[root<span class="variable">@dj</span><span class="operator">~</span>]# yum install http:<span class="operator">/</span><span class="operator">/</span>rpms.remirepo.net<span class="operator">/</span>enterprise<span class="operator">/</span>remi<span class="operator">-</span><span class="keyword">release</span><span class="number">-7.</span>rpm <span class="comment">--skip-broken</span></span><br></pre></td></tr></table></figure><p>3.安装yum源管理工具</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span>~]<span class="comment"># yum install yum-utils -y</span></span><br></pre></td></tr></table></figure><p>4.安装php及其模块</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span>~]<span class="comment"># yum install php* -y</span></span><br></pre></td></tr></table></figure><p>5.启动php服务</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@dj</span>~]<span class="comment"># systemctl start php-fpm.service</span></span><br></pre></td></tr></table></figure><p>6.设置开机自启</p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span>~]<span class="comment"># systemctl enable php-fpm.service</span></span><br></pre></td></tr></table></figure><p>7.测试</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dj~]# vim <span class="regexp">/var/</span>www<span class="regexp">/html/</span>test.php</span><br></pre></td></tr></table></figure><p>8.输入以下内容，保存退出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>9.在浏览器地址栏输入localhost/test.php。或者”你的ip/test.php”，显示PHP信息则安装成功。<br>(第4步非常有必要，不然用于json的处理方法json_decode()和json_encode()会无效，都是坑啊)</p><h3 id="测试PHP连接MySQL"><a href="#测试PHP连接MySQL" class="headerlink" title="测试PHP连接MySQL"></a>测试PHP连接MySQL</h3><p>1.登录MySQL创建一个数据库，注意分号不能丢</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">database</span> testDB;</span><br></pre></td></tr></table></figure><p>2.退出MySQL，输入</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dj~]# vim <span class="regexp">/var/</span>www<span class="regexp">/html/</span>php.php</span><br></pre></td></tr></table></figure><p>3.输入以下内容，保存退出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$connect</span>=mysqli_connect(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;你的mysql密码&quot;</span>,<span class="string">&quot;testDB&quot;</span>);</span><br><span class="line">mysqli_set_charset(<span class="variable">$connect</span>,<span class="string">&quot;UTF-8&quot;</span>);        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$connect</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>4.浏览器地址栏输入localhost/php.php，或者”你的ip/php.php”<br>输出OK则表示链接成功，否则失败</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;LAMP即Linux、Apache、MySQL、PHP的简称，是一种常见的web服务环境。Linux用作后端操作系统(OS)；Apache是Web服务器；MySQL是数据库；PHP是脚本语言。下面将展示如何搭建这套环境。&lt;/p&gt;
&lt;h3 id=&quot;MySQL安装&quot;&gt;&lt;a href=&quot;#MySQL安装&quot; class=&quot;headerlink&quot; title=&quot;MySQL安装&quot;&gt;&lt;/a&gt;MySQL安装&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux下Nginx安装</title>
    <link href="https://yourk.top/2021/02/05/003/"/>
    <id>https://yourk.top/2021/02/05/003/</id>
    <published>2021-02-04T16:00:00.000Z</published>
    <updated>2021-04-12T08:23:13.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本次安装使用的方式为编译安装</p><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><p>1.进入到对应的安装目录，这里的安装目录按自己需求来，比如我的/usr/local/目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">[root@dj~]#</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span></span><br></pre></td></tr></table></figure><p>2.下载nginx包(有外网的情况下)，具体版本可以去nginx官网<a href="http://nginx.org/download/">下载</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@dj local]</span># <span class="selector-tag">wget</span> <span class="selector-tag">http</span>://<span class="selector-tag">nginx</span><span class="selector-class">.org</span>/<span class="selector-tag">download</span>/<span class="selector-tag">nginx-1</span>.19.6<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>3.解压缩</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@dj</span> <span class="keyword">local</span>]<span class="meta"># tar -zxvf nginx-1.19.6.tar.gz</span></span><br></pre></td></tr></table></figure><p>4.进入到解压后的目录</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@dj</span> <span class="keyword">local</span>]<span class="meta"># cd /nginx-1.19.6/</span></span><br></pre></td></tr></table></figure><p>5.依次输入以下命令</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span> nginx-1.19.6]<span class="comment"># ./configure</span></span><br><span class="line">[root<span class="meta">@dj</span> nginx-1.19.6]<span class="comment"># make</span></span><br><span class="line">[root<span class="meta">@dj</span> nginx-1.19.6]<span class="comment"># make install</span></span><br></pre></td></tr></table></figure><p>6.编译安装完成后启动nginx</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dj nginx-<span class="number">1.19</span>.<span class="number">6</span>]# <span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>sbin/nginx</span><br></pre></td></tr></table></figure><p>7.停止nginx服务</p><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@dj</span>~]<span class="comment"># killall nginx</span></span><br></pre></td></tr></table></figure><h3 id="编辑主配置文件"><a href="#编辑主配置文件" class="headerlink" title="编辑主配置文件"></a>编辑主配置文件</h3><p>1.vim 打开配置文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dj~]# vim <span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>conf/nginx.conf</span><br></pre></td></tr></table></figure><p>2.修改部分</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen:<span class="number">80</span><span class="comment">#监听端口，默认值，按需修改</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">location</span> <span class="title">~ \.php</span>$ &#123;</span><br><span class="line">    proxy_pass   http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">8080</span>;</span><br><span class="line">&#125;<span class="comment">#开启nginx反向解析，php文件将由监听8080端口服务器处理</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本次安装使用的方式为编译安装&lt;/p&gt;
&lt;h3 id=&quot;安装Nginx&quot;&gt;&lt;a href=&quot;#安装Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装Nginx&quot;&gt;&lt;/a&gt;安装Nginx&lt;/h3&gt;&lt;p&gt;1.进入到对应的安装目录，这里的安装目录按自己需求来，比如我的/usr/local/目录下&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;[root@dj~]#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.下载nginx包(有外网的情况下)，具体版本可以去nginx官网&lt;a href=&quot;http://nginx.org/download/&quot;&gt;下载&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-attr&quot;&gt;[root@dj local]&lt;/span&gt;# &lt;span class=&quot;selector-tag&quot;&gt;wget&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;selector-tag&quot;&gt;nginx&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.org&lt;/span&gt;/&lt;span class=&quot;selector-tag&quot;&gt;download&lt;/span&gt;/&lt;span class=&quot;selector-tag&quot;&gt;nginx-1&lt;/span&gt;.19.6&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yourk.top/2021/02/04/hello-world/"/>
    <id>https://yourk.top/2021/02/04/hello-world/</id>
    <published>2021-02-04T03:14:23.430Z</published>
    <updated>2021-02-04T03:14:23.430Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>welcome</title>
    <link href="https://yourk.top/2021/02/01/welcome/"/>
    <id>https://yourk.top/2021/02/01/welcome/</id>
    <published>2021-02-01T07:18:38.000Z</published>
    <updated>2021-02-05T11:52:14.005Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://yourk.top/images/ykx.jpg" alt="夜空下"><br>welcome!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Tips</title>
    <link href="https://yourk.top/2021/02/01/Tips/"/>
    <id>https://yourk.top/2021/02/01/Tips/</id>
    <published>2021-01-31T16:00:00.000Z</published>
    <updated>2021-04-18T07:01:34.571Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>页面所有教程基于CentOS 8且有外网的情况下，CentOS 7用户操作类似！<br>本着简化优化网上相关教程目的，提供相关教程的“最优解”。<br>您还可以访问我的<a href="https://github.com/lonelyIslanders">GitHub</a><br>除自动生成代码外，所有代码均是手敲，无缩进。<br>作者水平有限，若有错误勿怪，谢谢！<br>联系：<a href="mailto:nnqaqpengju@163.com">地址</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="hexo" scheme="https://yourk.top/tags/hexo/"/>
    
  </entry>
  
</feed>
